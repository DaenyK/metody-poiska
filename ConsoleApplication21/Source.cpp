#include <stdio.h>
#include <locale.h>
#include <iostream>
#include <stdint.h>
#include <time.h>

using namespace std;

int q;
#define arr 20

void main()

{
	setlocale(LC_ALL, "Russian");
start:
	int nz;

	do
	{
		cout << "Введите номер задания: ";
		cin >> nz;
		switch (nz)
		{
		case 1001:

		{
			cout << "ПУЗЫРЬКОВЫЙ МЕТОД: \n";
			int a[arr] = {};
			int j;

			cout << "до сортировки:" << endl;
			for (int i = 0; i < 20; i++)
			{
				a[i] = 1 + rand() % 99;
				cout << "a[" << i << "] = " << a[i] << endl;

			}

			cout << "____________________________________________\n";

			for (int i = 0; i < arr - 1; i++)
			{
				for (j = (arr - 1); j > i; j--)
				{
					if (a[j - 1] > a[j])
					{
						int temp = a[j - 1];
						a[j - 1] = a[j];
						a[j] = temp;

					}

				}
				cout << "a[" << i << "] = " << a[j] << endl;
			}


			int left = 0;
			int right = 19;
			int count = 0;
			int key;
			cout << "введите число, чтобы найти его: "; cin >> key;
			int issearch = -1;

			while (left <= right)
			{
				count++;
				int mid = (left + right) / 2;

				if (key == a[mid])
				{
					issearch = mid;
					break;
				}

				if (key < a[mid])
				{
					right = mid - 1;
				}
				else
				{
					left = mid + 1;
				}
			}

			if (issearch == -1)
				cout << "элемент не найден!" << endl;
			else
			{
				cout << "a[" << issearch << "]=" << a[issearch] << " (за " << count << " проходов)" << endl;
			}
		}
		break;

		case 1:
		{
			//1.	Ввести два целочисленных массива − по 10 элементов в каждом.Сформировать новый массив, на четных местах которого будут
			//элементы с нечетными индексами из первого массива, а на нечетных – с четными индексами из второго.

			int a[10] = {};
			int b[10] = {};
			int c[10] = {};
			int j;


			for (int i = 0; i < 10; i++)
			{
				a[i] = 1 + rand() % 99;
				b[i] = 1 + rand() % 99;
				cout << "a[" << i << "] = " << a[i] << "\tb[" << i << "] = " << b[i] << endl;

			}
			cout << endl;

			for (int j = 0; j < 10; j++)
			{
				if (j % 2 == 0)
				{
					c[j] = a[j + 1];
				}
				else
				{
					c[j] = b[j - 1];
				}
			}


			for (int i = 0; i < 10; i++)
			{
				cout << "c[" << i << "] = " << c[i] << endl;
			}

		}break;

		case 2:
		{
			//2.	Ввести целочисленный массив, состоящий из 17 - ти элементов(двузначные целые числа).Вычислить сумму цифр этого массива
			int a[17] = {};
			int sum = 0;

			for (int i = 0; i < 10; i++)
			{
				a[i] = 1 + rand() % 99;

				cout << "a[" << i << "] = " << a[i] << endl;
				sum += a[i];
			}
			cout << sum << " сумма цифр массива" << endl;
		}break;

		case 3:
		{
			//3.	Ввести два массива X и Y, состоящих из 10 - ти элементов целого типа.Сформировать массив S, состоящий из одинаковых элементов исходных массивов
			int a[10] = {};
			int b[10] = {};
			int s[10] = { 0 };
			int j;


			for (int i = 0; i < 10; i++)
			{
				a[i] = 1 + rand() % 15;
				b[i] = 1 + rand() % 15;
				if (a[i] == b[i])
					s[i] = a[i];

				cout << "a[" << i << "] = " << a[i] << "\tb[" << i << "] = " << b[i] << "\ts[" << i << "] = " << s[i] << endl;

			}
			cout << endl;
		}break;

		case 4:
		{
			//4.	Дан массив вещественных чисел Z(16).Определить разность между суммой элементов c четными индексами и суммой элементов, индексы которых кратны трем
			int a[16] = {};
			int sum = 0, sumi = 0;

			for (int i = 0; i < 10; i++)
			{
				a[i] = 1 + rand() % 99;

				cout << "a[" << i << "] = " << a[i] << endl;

				if (i % 2 == 0)
					sumi += a[i];
				if (i % 3 == 0)
					sum += a[i];
			}
			cout << sumi - sum << " разность между суммой элементов c четными индексами и суммой элементов, индексы которых кратны трем" << endl;
		}break;

		case 5:
		{
			//5.	Ввести массив, состоящий из 12 элементов действительного типа.Расположить элементы в порядке убывания.Определить количество  происшедших при этом перестановок.
			int a[12] = {};
			int j;
			for (int i = 0; i < 12; i++)
			{
				a[i] = 1 + rand() % 99;

				cout << "a[" << i << "] = " << a[i] << endl;
			}
			cout << "___________________________\nв порядке убывания" << endl;

			for (int i = 12 - 1; i > 0; i--)
			{
				for (j = i; j > (12 - 1); j--)
				{
					if (a[j - 1] < a[j])
					{
						int temp = a[j - 1];
						a[j - 1] = a[j];
						a[j] = temp;
					}

				}
			}

			for (int i = 0; i < 12; i++)
				cout << "a[" << i << "] = " << a[j] << endl;
		}break;


		case 6:
		{
			//6.	Ввести с клавиатуры целочисленный массив, состоящий из 11 элементов.
			//Вычислить сумму нечетных по значению отрицательных элементов и заменить элементы кратные трем на эту сумму.
			int a[10] = {};
			int sum = 0;
			for (int i = 0; i < 10; i++)
			{
				a[i] = -100 + rand() % 200;



				if (a[i] < 0)
					sum += a[i];

				if (a[i] % 3 == 0)
					a[i] = sum;
			}

			cout << sum << endl;

			for (int i = 0; i < 10; i++)
				cout << "a[" << i << "] = " << a[i] << endl;
		}break;

		case 7:
		{
			//7.	Дан массив вещественных чисел.Определить элемент массива(значение и индекс), который наиболее удален от заданного вещественного числа S.
			int a[20] = {};
			int sum = 0, sumi = 0, s;
			int	min = 100, max = 0;
			int MX, MN;
			cout << "введите число S: "; cin >> s;

			for (int i = 0; i < 20; i++)
			{
				a[i] = 1 + rand() % 99;

				cout << "a[" << i << "] = " << a[i] << endl;
				if (a[i] > max)
				{
					max = a[i];
					MX = i;
				}
				if (a[i] < min)
				{
					min = a[i];
					MN = i;
				}

			}
			if (s > 50)
				cout << min << " максимально-удаленное число от вашего и его индекс: " << MN << endl;
			else if (s < 50)
				cout << max << " максимально-удаленное число от вашего и его индекс: " << MX << endl;

		}break;

		case 8:
		{
			//8.	Ввести целочисленный массив, состоящий из 10 элементов.Определить сумму и количество элементов, расположенных до первого отрицательного числа
			int a[10] = {};
			int sum = 0, count = 0;
			for (int i = 0; i < 10; i++)
			{
				a[i] = -10 + rand() % 200;
				sum += a[i];

				if (a[i] < 0)
				{

					count++; break;

				}
			}

			for (int i = 0; i < 10; i++)
				cout << "a[" << i << "] = " << a[i] << endl;
			cout << sum << "  - сумма элементов, расположенных до первого отрицательного числа и кол-во этих элементов: " << count << endl;
		}break;

		case 9:
		{
			//9.	Определить количество локальных минимумов в заданном числовом массиве. 
			//(Локальный минимум в числовом массиве – это последовательность трех рядом стоящих чисел, в которой среднее число меньше стоящих слева и справа от него).

			int a[10] = {};
			int count = 0;
			for (int i = 0; i < 10; i++)
			{
				a[i] = 1 + rand() % 200;
				cout << "a[" << i << "] = " << a[i] << endl;
			}
			for (int i = 0; i < 10; i++)
			{
				if ((a[i + 1] < a[i]) && (a[i + 1] < a[i + 2]))
					count++;
			}
			cout << count << " - локальных минимума" << endl;
		}break;

		case 10:
		{
			//10.	В заданном целочисленном массиве Z(15) положительных, отрицательных и нулевых чисел определить сумму и вывести последовательность значений элементов,
			//которые расположены между первым отрицательным и нулевым элементами.
			int a[15] = {};
			int count = 0, sum = 0;
			for (int i = 0; i < 10; i++)
			{
				a[i] = -10 + rand() % 12;
				cout << "a[" << i << "] = " << a[i] << endl;
				sum += a[i];
			}

			for (int i = 0; i < 10; i++)
			{
				if (a[i] < 0)
				{
					for (int j=i;j<10;j++)
					{
						cout << a[j] << " \t";
						if (a[j] == 0)
							break;
					} 
				}
			}

		}break;

		case 11:
		{
			//11.	В заданном целочисленном массиве удалить элементы, которые встречаются более двух раз.
			int a[10] = {};
			int count = 0;
			for (int i = 0; i < 10; i++)
			{
				a[i] = 1 + rand() % 20;
				cout << "a[" << i << "] = " << a[i] << endl;
			}
		}break;

		}


		cout << "Хотите продолжить 1/0?";
		cin >> q;


		switch (q)
		{
		case 1:
			system("cls");
			goto start;
			break;
		default:
		{
			cout << "ошибка" << endl;
		}
		}
	} while (nz > 0);


}